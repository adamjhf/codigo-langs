name: PowerShell
description: A task automation and configuration management framework consisting of a command-line shell and a scripting language. It is built on .NET and provides full access to COM and WMI.
category: programming
status: active
aliases:
  - posh
  - pwsh
file_extensions:
  - ps1
  - psd1
  - psm1
compilers:
  - name: PowerShell Engine
    type: interpreter
    license: MIT
    is_reference: true
  - name: PowerShell Core
    type: interpreter
    license: MIT
    source_url: https://github.com/PowerShell/PowerShell
paradigms:
  - object-oriented
  - imperative
  - functional
typing:
  system: dynamic
  structural: true
  strength: strong
  inference: full
  type_checking: runtime
  type_coercion: moderate
  type_annotations: optional
execution:
  type:
    - interpreted
    - interpreted with JIT compilation
  compiles_to:
    - bytecode
  runtime_environments:
    - language-specific runtime
    - native OS process
  performance:
    startup_time: moderate
    memory_usage: moderate
    computation_speed: moderate
domains:
  primary:
    - DevOps
    - automation
    - systems programming
    - configuration management
    - scripting
  secondary:
    - web development
    - cloud computing
    - server-side applications
    - build automation
  emerging:
    - infrastructure as code
platforms:
  operating_systems:
    - Windows
    - macOS
    - Linux
  architectures:
    - x86-64
    - ARM64
    - ARM
  cloud_function_environments:
    - AWS Lambda
    - Azure Functions
ecosystem:
  maturity: high
  package_registry: PowerShell Gallery
  community_size: large
  learning_resources: large
  job_market_demand: moderate
complexity:
  learning_curve: moderate
  cognitive_load: moderate
  syntax_complexity: moderate
  semantic_complexity: moderate
language_features:
  immutability: optional
  enums: basic
  metaprogramming: true
  generics: true
  c_interop: true
  pattern_matching: true
  null_safety: false
  memory_safety:
    type: managed
    level: high
  memory_management:
    type: garbage collection
  key_features:
    - first-class functions
    - closures
    - string interpolation
    - reflection
    - meta-programming
    - destructuring
    - modules
    - named arguments
concurrency:
  model: threads
  features:
    - async/await
    - promises/futures
    - thread pools
    - parallel collections
  ease_of_use: moderate
error_handling:
  primary_mechanism: exceptions
  features:
    - stack traces
    - error chaining
    - custom error types
    - error context
    - error propagation
  stack_traces: true
  debugging:
    source_maps: true
    breakpoints: true
    step_debugging: true
package_managers:
  primary: PowerShellGet
  alternatives:
    - NuGet
popular_frameworks:
  backend:
    - PSFramework
    - Pester
    - PoshRSJob
  testing:
    - Pester
    - PSScriptAnalyzer
development_tools:
  lsps:
    - PowerShell Language Server
  debugging:
    - PowerShell ISE
    - Visual Studio Code PowerShell Extension
  profiling:
    - PowerShell Script Analyzer
  build_systems:
    - PSake
    - Invoke-Build
  linters:
    - PSScriptAnalyzer
standard_library:
  maturity: high
  key_areas:
    - file I/O
    - networking
    - text processing
    - process management
    - security
    - date/time
    - logging
    - CLI tools
    - file system operations
    - JSON/XML processing
  size: large
versioning:
  release_cycle: semantic versioning
  backwards_compatibility: moderate
history:
  inception: 2006-11-14
  developer:
    - Microsoft
  designed_by:
    - Jeffrey Snover
  standards_bodies:
    - Microsoft
  logo: https://commons.wikimedia.org/wiki/Special:FilePath/PowerShell%20Core%206.0%20icon.png
  influenced_by:
    languages:
      - C#
      - Perl
      - Ksh
      - Bash
      - SQL
      - Tcl
      - Chef
      - Python
      - GNU Bash
      - KornShell
      - Control Language
      - DIGITAL Command Language
      - Tk
      - Puppet
    paradigms:
      - object-oriented
      - functional
      - procedural
official_website: https://microsoft.com/powershell
documentation:
  quality: high
  official_sources:
    - https://learn.microsoft.com/en-us/powershell/
    - https://github.com/PowerShell/PowerShell/tree/master/docs
  community_resources:
    - https://www.powershellgallery.com/
    - https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/00-introduction
references:
  github_topics:
    - powershell
    - powershell-module
    - powershell-scripts
  quora_topics:
    - Microsoft-Windows-PowerShell
    - Windows-Powershell-Scripting
  stackexchange_tags:
    - powershell
    - https://stackoverflow.com/tags/powershell
  wikidata_id: Q837763
  subreddit: PowerShell
color: '#012456'
