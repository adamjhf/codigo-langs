name: Ada
description: Ada is a structured, statically typed, object-oriented high-level programming language designed for reliability and safety-critical applications. It was developed under contract to the US Department of Defense and named after Ada Lovelace, considered the first computer programmer.
category: programming
status: active
aliases:
  - ada95
  - ada2005
file_extensions:
  - adb
  - ada
  - ads
compilers:
  - name: GNAT
    type: compiler
    license: GPL-3.0
    source_url: https://github.com/gcc-mirror/gcc/tree/master/gcc/ada
    is_reference: true
  - name: Rational Apex
    type: compiler
    license: proprietary
paradigms:
  - imperative
typing:
  system: static
  structural: false
  strength: strong
  inference: partial
  type_checking: compile-time
  type_coercion: none
  type_annotations: required
execution:
  type:
    - compiled
  compiles_to:
    - machine code
  runtime_environments:
    - native OS process
    - embedded interpreter
  performance:
    startup_time: very fast
    memory_usage: low
    computation_speed: fast
    compilation_speed: slow
domains:
  primary:
    - embedded systems
    - real-time computing
    - safety-critical systems
    - systems programming
    - aerospace
  secondary:
    - scientific computing
    - simulation
    - telecommunications
  emerging:
    - IoT
platforms:
  operating_systems:
    - Windows
    - macOS
    - Linux
    - Unix
    - embedded
    - bare metal
  architectures:
    - x86
    - x86-64
    - ARM
    - PowerPC
    - SPARC
ecosystem:
  maturity: high
  package_registry: Alire
  community_size: small
  learning_resources: small
  job_market_demand: low
complexity:
  learning_curve: high
  cognitive_load: high
  syntax_complexity: high
  semantic_complexity: high
language_features:
  immutability: optional
  enums: basic
  metaprogramming: true
  generics: true
  c_interop: true
  pattern_matching: false
  null_safety: true
  memory_safety:
    type: managed
    level: very high
  memory_management:
    type: manual
    implementation: RAII
    manual_control: true
  key_features:
    - modules
    - generics
    - contracts
concurrency:
  model: threads
  features:
    - message passing
    - shared memory
    - task parallelism
    - concurrent data structures
    - supervisors
  ease_of_use: high
error_handling:
  primary_mechanism: exceptions
  features:
    - stack traces
    - custom error types
    - error propagation
  stack_traces: true
  debugging:
    source_maps: true
    breakpoints: true
    step_debugging: true
package_managers:
  primary: Alire
  alternatives:
    - GPRbuild
popular_frameworks:
  backend:
    - AWS (Ada Web Server)
  testing:
    - AUnit
development_tools:
  lsps:
    - ada_language_server
  debugging:
    - GDB
  build_systems:
    - GPRbuild
    - Alire
  linters:
    - AdaControl
standard_library:
  maturity: high
  key_areas:
    - file I/O
    - networking
    - concurrency
    - data structures
    - text processing
    - date/time
    - mathematics
  size: large
versioning:
  release_cycle: fixed schedule
  backwards_compatibility: high
history:
  inception: 1980-01-01
  developer:
    - U.S. Department of Defense
    - CII Honeywell Bull
    - Jean Ichbiah
    - S. Tucker Taft
  designed_by:
    - Jean Ichbiah
    - S. Tucker Taft
  described_by: ISO/IEC 8652
  standards_bodies:
    - ISO
    - ANSI
  logo: https://commons.wikimedia.org/wiki/Special:FilePath/Ada%20horizon%20green%20logo%20with%20slogan.svg
  influenced_by:
    languages:
      - Pascal
      - ALGOL 68
      - Green
      - ALGOL 60
      - Ada 95
      - Java
      - C++
      - Smalltalk
      - Eiffel
      - Modula-2
    paradigms:
      - imperative
      - procedural
      - object-oriented
official_website: https://www.adaic.org
documentation:
  quality: high
  official_sources:
    - https://www.adaic.org/resources/add_content/docs/
references:
  github_topics:
    - ada
    - ada-lang
  stackexchange_tags:
    - ada
  wikidata_id: Q302
  subreddit: ada
color: '#02f88c'